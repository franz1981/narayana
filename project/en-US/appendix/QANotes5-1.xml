<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../project_documentation.ent">
%BOOK_ENTITIES;
]>

<appendix>
  <title>QA Testsuite</title>

<para>
In the source git repository we maintain a testsuite for integration testing.
</para>

<!-- start section -->
<section><title> JDBCResources 01 &amp; 02</title>
<section><title>Overview</title>
  <itemizedlist>
  <listitem>
    Tests 
    <itemizedlist>
      <listitem>JDBC Support</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Series 
    <itemizedlist>
      <listitem>JTSResources01: Implicit context propagation</listitem>
      <listitem>JTSResources02: Explicit context propagation</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Sub-series 
    <itemizedlist>
      <listitem>_ibmdb2_jndi</listitem>
      <listitem>_mssqlserver_jndi</listitem>
      <listitem>_mysql_jndi</listitem>
      <listitem>_oracle_thin_jndi</listitem>
      <listitem>_pgsql_jndi</listitem>
      <listitem>_sybase_jndi</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Summary</title>
  <itemizedlist>
  <listitem>
    Building blocks: 
    <itemizedlist>
      <listitem>Interfaces: 1</listitem>
      <listitem>Implementations: 2</listitem>
      <listitem>Servers: 2</listitem>
      <listitem>Setups: 2</listitem>
      <listitem>Clients: 16</listitem>
      <listitem>Outcomes: 4</listitem>
      <listitem>Cleanups: 1</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests: 
    <itemizedlist>
      <listitem>Configurations: 32</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Interfaces</title>
  <itemizedlist>
  <listitem>
    InfoTable
    <itemizedlist>
      <listitem> insert(in string name, in string value)</listitem>
      <listitem> update(in string name, in string value)</listitem>
      <listitem> select(in string name, out string value)</listitem>
      <listitem> delete(in string name)</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Implementations</title>
  <itemizedlist>
  <listitem>
    JDBCInfoTableImpl01 
    <itemizedlist>
      <listitem>Creates a single JDBC connection for all operations</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    JDBCInfoTableImpl02 
    <itemizedlist>
      <listitem>Creates a JDBC connection per operation</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Server</title>
  <itemizedlist>
    <listitem>Server01: 1 x JDBCInfoTableImpl01</listitem>
    <listitem>Server02: 1 x JDBCInfoTableImpl02</listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Setups</title>
  <itemizedlist>
  <listitem>
    Setup01 
    <itemizedlist>
      <listitem>Creates Table InfoTable (Name VARCHAR(64), Value VARCHAR(64)) 
      <itemizedlist>
        <listitem>Inserts 10 entries ("Name_’X’", "Value_’X’") [Where X is 0 … 9]</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Setup02 
    <itemizedlist>
      <listitem>Creates Table InfoTable (Name VARCHAR(64), Value VARCHAR(64)) 
      <itemizedlist>
        <listitem>Inserts 10 entries ("Name_’X’", "Value_’X’") [Where X is 0 … 9]</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>

</section>
<section><title> JDBCResources 01 &amp; 02 Clients</title>
  <itemizedlist>
  <listitem>
    Client01 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, no transaction</listitem>
      <listitem>Verify existence of inserted entries, no transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client02 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, within transaction</listitem>
      <listitem>Verify existence of inserted entries, within transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client03 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, within transaction</listitem>
      <listitem>Update entry, with transaction which rolls back</listitem>
      <listitem>Verify existence of inserted entries, within transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client04 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, within transaction</listitem>
      <listitem>Delete entry, with transaction which rolls back</listitem>
      <listitem>Verify existence of inserted entries, within transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client05 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, within transaction</listitem>
      <listitem>Update entry, within transaction</listitem>
      <listitem>Update same entry with old value, no transaction</listitem>
      <listitem>Verify existence of inserted entries, within transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client06 
    <itemizedlist>
      <listitem>Obtains an InfoTable object</listitem>
      <listitem>Inserts 10 entries, within transaction</listitem>
      <listitem>Update entry, no transaction</listitem>
      <listitem>Update same entry with old value, within transaction</listitem>
      <listitem>Verify existence of inserted entries, within transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client07 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, split alternatively, over each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>No transaction</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client08 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, split alternatively, over each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client09 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, split alternatively, over each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, per update</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client10 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, split alternatively, over each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, which rolls back</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client11 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, split alternatively, over each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, per update, which rolls back</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client12 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, in each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>No transaction</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client13 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, in each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client14 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, in each object 
      <itemizedlist>
        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, per update</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client15 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, in each object 
      <itemizedlist>

        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, which rolls back</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client16 
    <itemizedlist>
      <listitem>Obtains two InfoTable objects</listitem>
      <listitem>Update 10 entries, in each object 
      <itemizedlist>

        <listitem>Name_’X’", "Value_’9-X’") [Where X is 0 … 9]</listitem>
        <listitem>Within transaction, per update, which rolls back</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>

</section>
<section><title> JDBCResources 01 &amp; 02 Outcomes</title>
  <itemizedlist>
  <listitem>
    Outcome01 
    <itemizedlist>
      <listitem>Verify existence and values of inserted entries</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Outcome02 
    <itemizedlist>
      <listitem>Verify existence and values [reverse] of inserted entries</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Outcome03 
    <itemizedlist>
      <listitem>Verify existence and values of inserted entries, in two InfoTables</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Outcome04 
    <itemizedlist>
      <listitem>Verify existence and values [reverse] of inserted entries, in two InfoTables</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Cleanups</title>
  <itemizedlist>
  <listitem>
    Cleanup01 
    <itemizedlist>
      <listitem>Drops Table "InfoTable"</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 01 &amp; 02 Configurations</title>
  <itemizedlist>
  <listitem> Test001: 1 x Server01 + 1 x Client01</listitem>
  <listitem> Test002: 1 x Server01 + 1 x Client02</listitem>
  <listitem> Test003: 1 x Server01 + 1 x Client03</listitem>
  <listitem> Test004: 1 x Server01 + 1 x Client04</listitem>
  <listitem> Test005: 1 x Server01 + 1 x Client05</listitem>
  <listitem> Test006: 1 x Server01 + 1 x Client06</listitem>
  <listitem> Test007: 1 x Server02 + 1 x Client01</listitem>
  <listitem> Test008: 1 x Server02 + 1 x Client02</listitem>
  <listitem> Test009: 1 x Server02 + 1 x Client03</listitem>
  <listitem> Test010: 1 x Server02 + 1 x Client04</listitem>
  <listitem> Test011: 1 x Server02 + 1 x Client05</listitem>
  <listitem> Test012: 1 x Server02 + 1 x Client06</listitem>
  <listitem> Test013: 2 x Server01 + 1 x Client07 + Outcome02</listitem>
  <listitem> Test014: 2 x Server01 + 1 x Client08 + Outcome02</listitem>
  <listitem> Test015: 2 x Server01 + 1 x Client09 + Outcome02</listitem>
  <listitem> Test016: 2 x Server01 + 1 x Client10 + Outcome01</listitem>
  <listitem> Test017: 2 x Server01 + 1 x Client11 + Outcome01</listitem>
  <listitem> Test018: 2 x Server02 + 1 x Client07 + Outcome02</listitem>
  <listitem> Test019: 2 x Server02 + 1 x Client08 + Outcome02</listitem>
  <listitem> Test020: 2 x Server02 + 1 x Client09 + Outcome02</listitem>
  <listitem> Test021: 2 x Server02 + 1 x Client10 + Outcome01</listitem>
  <listitem> Test022: 2 x Server02 + 1 x Client11 + Outcome01</listitem>
  <listitem> Test023: 2 x Server01 + 1 x Client12 + Outcome04</listitem>
  <listitem> Test024: 2 x Server01 + 1 x Client13 + Outcome04</listitem>
  <listitem> Test025: 2 x Server01 + 1 x Client14 + Outcome04</listitem>
  <listitem> Test026: 2 x Server01 + 1 x Client15 + Outcome03</listitem>
  <listitem> Test027: 2 x Server01 + 1 x Client16 + Outcome03</listitem>
  <listitem> Test028: 2 x Server02 + 1 x Client12 + Outcome04</listitem>
  <listitem> Test029: 2 x Server02 + 1 x Client13 + Outcome04</listitem>
  <listitem> Test030: 2 x Server02 + 1 x Client14 + Outcome04</listitem>
  <listitem> Test031: 2 x Server02 + 1 x Client15 + Outcome03</listitem>
  <listitem> Test032: 2 x Server02 + 1 x Client16 + Outcome03</listitem>
  </itemizedlist>
</section>

</section>

<!-- start section -->
<section><title> JDBCResources 03 &amp; 04</title>

<section><title>Overview</title>
  <itemizedlist>
  <listitem>
    Tests 
    <itemizedlist>
      <listitem>JDBC Support – Conflict over resource</listitem>
      <listitem>May fail: Depending on DB’s behaviour</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Series 
    <itemizedlist>
      <listitem>JTSResources03: Implicit context propagation</listitem>
      <listitem>JTSResources04: Explicit context propagation</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Sub-series 
    <itemizedlist>
      <listitem>_ibmdb2_jndi</listitem>
      <listitem>_mssqlserver_jndi</listitem>
      <listitem>_mysql_jndi</listitem>
      <listitem>_oracle_thin_jndi</listitem>
      <listitem>_pgsql_jndi</listitem>
      <listitem>_sybase_jndi</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Summary</title>
  <itemizedlist>
  <listitem>
    Building blocks: 
    <itemizedlist>
      <listitem>Interfaces: 1</listitem>
      <listitem>Implementations: 2</listitem>
      <listitem>Servers: 2</listitem>
      <listitem>Setups: 1</listitem>
      <listitem>Clients: 1</listitem>
      <listitem>Outcomes: 1</listitem>
      <listitem>Cleanups: 1</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests: 
    <itemizedlist>
      <listitem>Configurations: 4</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Interfaces</title>
  <itemizedlist>
  <listitem>
    NumberTable 
    <itemizedlist>
      <listitem>get(in string name, out long value)</listitem>
      <listitem>set(in string name, in long value)</listitem>
      <listitem>increase(in string name)</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Implementations</title>
  <itemizedlist>
  <listitem>
    JDBCNumberTableImpl01
    <itemizedlist>
      <listitem>Creates a single JDBC connection for all operations</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    JDBCNumberTableImpl02
    <itemizedlist>
      <listitem>Creates a JDBC connection per operation</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Server</title>
  <itemizedlist>
  <listitem>Server01: 1 x JDBCNumberTableImpl01</listitem>
  <listitem>Server02: 1 x JDBCNumberTableImpl02</listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Setups</title>
  <itemizedlist>
  <listitem>
    Setup01 
    <itemizedlist>
      <listitem>Creates Table NumberTable 
        <itemizedlist>
          <listitem>Name VARCHAR(64), Value INTEGER)</listitem>
        </itemizedlist>
      </listitem>
      <listitem>Inserts n entries 
      <itemizedlist>
        <listitem>Name_’X’", "0") [Where X is 0 … n - 1]</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Clients</title>
  <itemizedlist>
  <listitem>
    Client01 
    <itemizedlist>
      <listitem>Operation 
      <itemizedlist>
        <listitem>Obtains an NumberTable object</listitem>
        <listitem>Begin transaction</listitem>
        <listitem>Gets Values for "Name_0" and "Name_1"</listitem>
        <listitem>Increase value associated with "Name_0"</listitem>
        <listitem>Sleeps 15 sec.</listitem>
        <listitem>Increase value associated with "Name_1"</listitem>
        <listitem>Gets Values for "Name_0" and "Name_1"</listitem>
        <listitem>Commit(true) transaction</listitem>
      </itemizedlist>
      </listitem>
      <listitem>Passes if: 
      <itemizedlist>
        <listitem>New values are the same, and equals old values plus one, or</listitem>
        <listitem>InvocationException thrown with Reason "ReasonCantSerializeAccess"</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Outcomes</title>
  <itemizedlist>
  <listitem>
    Outcome01 
    <itemizedlist>
      <listitem>Verify first n entries (0 … n - 1) have value n</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Cleanups</title>
  <itemizedlist>
  <listitem>
    Cleanup01 
    <itemizedlist>
      <listitem>Drops Table "NumberTable"</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> JDBCResources 03 &amp; 04 Configurations</title>
  <itemizedlist>
  <listitem> Test01: 1 x Server01 + 2 x Client01 + Outcome01</listitem>
  <listitem> Test02: 2 x Server01 + 2 x Client01 + Outcome01</listitem>
  <listitem> Test03: 1 x Server02 + 2 x Client01 + Outcome01</listitem>
  <listitem> Test04: 2 x Server02 + 2 x Client01 + Outcome01</listitem>
  </itemizedlist>
</section>

</section>

<!-- start section -->
<section><title> CurrentTests</title>
<section><title>Overview</title>
  <itemizedlist>
  <listitem>
    Tests 
    <itemizedlist>
      <listitem>Test Current interface</listitem>
      <listitem>Close to "Unit Tests"</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> CurrentTests01 Summary</title>
  <itemizedlist>
  <listitem>
    Building blocks: 
    <itemizedlist>
      <listitem>Interfaces: 0</listitem>
      <listitem>Implementations: 0</listitem>
      <listitem>Servers: 0</listitem>
      <listitem>Clients: 34</listitem>
      <listitem>Outcomes: 0</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests: 
    <itemizedlist>
      <listitem>Configurations: 34</listitem>
      <listitem>TestXX.java maps to Test0XX.conf</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> CurrentTests Clients</title>
  <itemizedlist>
  <listitem>
    Tests 01 through 16: Complete transaction and then check that a further operation throws NoTransaction:
    <itemizedlist>
<table>
<title>Tests 01 through 16</title>
<tgroup cols="5">
<colspec colnum="1" colname="col1" colwidth="1*"/>
<colspec colnum="2" colname="col2" colwidth="1*"/>
<colspec colnum="3" colname="col3" colwidth="1*"/>
<colspec colnum="4" colname="col4" colwidth="1*"/>
<colspec colnum="5" colname="col5" colwidth="1*"/>
<thead>
<row>
<entry>Op To Check <?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>None<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>begin commit(true)<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>begin commit(false)<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>begin rollback<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
</row>
</thead>
<tbody>
<row>
<entry>commit(true)<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>Test01</entry>
<entry>Test05</entry>
<entry>Test09</entry>
<entry>Test13</entry>
</row>
<row>
<entry>commit(false)<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>Test02</entry>
<entry>Test06</entry>
<entry>Test10</entry>
<entry>Test14</entry>
</row>
<row>
<entry>rollback()<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>Test03</entry>
<entry>Test07</entry>
<entry>Test11</entry>
<entry>Test14</entry>
</row>
<row>
<entry>rollback_only()<?dbhtml bgcolor="#EEEEEE" ?><?dbfo bgcolor="#EEEEEE" ?></entry>
<entry>Test04</entry>
<entry>Test08</entry>
<entry>Test12</entry>
<entry>Test15</entry>
</row>
</tbody>
</tgroup>
</table>
    </itemizedlist>

  </listitem>
  <listitem>
    Test17 
    <itemizedlist>
      <listitem>Create a series if 1000 transactions, terminated with commit(true)</listitem>
      <listitem>Checks all names (get_transaction_name) are unique</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test18 
    <itemizedlist>
      <listitem>Create a series if 1000 transactions, terminated with commit(false)</listitem>
      <listitem>Checks all names (get_transaction_name) are unique</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test19 
    <itemizedlist>
      <listitem>Create a series if 1000 transactions, terminated with rollback()</listitem>
      <listitem>Checks all names (get_transaction_name) are unique</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test20 
    <itemizedlist>
      <listitem>Create and suspends 1000 transactions</listitem>
      <listitem>Resumes transactions in series</listitem>
      <listitem>Checks names (get_transaction_name) correspond</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test21 
    <itemizedlist>
      <listitem>Preamble: None</listitem>
      <listitem>Checks if suspend return null, then not transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test22 
    <itemizedlist>
      <listitem>Preamble: begin(), commit(true)</listitem>
      <listitem>Checks if suspend return null, then not transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test23 
    <itemizedlist>
      <listitem>Preamble: begin(), commit(false)</listitem>
      <listitem>Checks if suspend return null, then not transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test24 
    <itemizedlist>
      <listitem>Preamble: begin(), rollback()</listitem>
      <listitem>Checks if suspend return null, then not transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test25 
    <itemizedlist>
      <listitem>Checks resume(null) does not throw InvalidControl</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test26 
    <itemizedlist>
      <listitem>Checks that resume() of transaction terminated with commit(true) throws InvalidControl</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test27 
    <itemizedlist>
      <listitem>Checks that resume() of transaction terminated with commit(false) throws InvalidControl</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test28 
    <itemizedlist>
      <listitem>Checks that resume() of transaction terminated with rollback() throws InvalidControl</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test29 
    <itemizedlist>
      <listitem>Preamble: None</listitem>
      <listitem>Checks that get_status() when no transaction returns StatusNoTransaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test30 
    <itemizedlist>
      <listitem>Preamble: begin(), commit(true)</listitem>
      <listitem>Checks that get_status() when no transaction returns StatusNoTransaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test31 
    <itemizedlist>
      <listitem>Preamble: begin(), commit(false)</listitem>
      <listitem>Checks that get_status() when no transaction returns StatusNoTransaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test32 
    <itemizedlist>
      <listitem>Preamble: begin(), rollback()</listitem>
      <listitem>Checks that get_status() when no transaction returns StatusNoTransaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test33 
    <itemizedlist>
      <listitem>Checks that get_status() when in transaction returns StatusActive</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test34 
    <itemizedlist>
      <listitem>Checks that get_status() when in transaction marked roll back only returns StatusMarkedRollback</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
</section>

<!-- start section -->
<section><title> OTSServer</title>

<section><title>Overview</title>
  <itemizedlist>
  <listitem>
    Tests 
    <itemizedlist>
      <listitem>Tests OTSServer (a TransactionFactory interface implementation)</listitem>
      <listitem>Test001 to Test006 (Test003 to Test006 requires "DYNAMIC") - ClientXX.java maps to Test0XX.conf</listitem>
      <listitem>Test007 to Test012 - ClientXX.java maps to Test0XX.conf with args 1000</listitem>
      <listitem>Test013 to Test016 - Client13: x1, x2 with args 4 250 and x3, x4 with args 4 100</listitem>
      <listitem>Test017 to Test020 - Client13: x1, x2 with args 4 250 and x3, x4 with args 4 100</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> OTSServer Summary</title>
  <itemizedlist>
  <listitem>
    Building blocks: 
    <itemizedlist>
      <listitem>Interfaces: 0</listitem>
      <listitem>Implementations: 0</listitem>
      <listitem>Servers: 1 (OTS_Server)</listitem>
      <listitem>Clients: 14</listitem>
      <listitem>Outcomes: 0</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests: 
    <itemizedlist>
      <listitem>Configurations: 20</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> OTSServer Clients</title>
  <itemizedlist>
  <listitem>
    Test01 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
      <listitem>Check its status is StatusActive</listitem>
      <listitem>Check commit(true) does not throw exception</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test02 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
      <listitem>Check its status is StatusActive</listitem>
      <listitem>Check rollback() does not throw exception</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test03 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(4)</listitem>
      <listitem>Check its status is StatusRolledBack, after 8 seconds</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test04 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(4)</listitem>
      <listitem>Check commit(true) throws INVALID_TRANSACTION or BAD_OPERATION, after 8 seconds</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test05 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(4)</listitem>
      <listitem>Check commit(false) throws INVALID_TRANSACTION or BAD_OPERATION, after 8 seconds</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test06 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(4)</listitem>
      <listitem>Check commit(true) throws INVALID_TRANSACTION or BAD_OPERATION, after 8 seconds</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test07 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
      <listitem>Check its status is StatusActive</listitem>
      <listitem>Check commit(true) does not throw exception, repeat n times</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test08 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
      <listitem>Check its status is StatusActive</listitem>
      <listitem>Check commit(false) does not throw exception, repeat n times</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test09 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
      <listitem>Check its status is StatusActive</listitem>
      <listitem>Check rollback() does not throw exception, repeat n times</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test10 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0), repeat n times</listitem>
      <listitem>Check each status is StatusActive</listitem>
      <listitem>Check each commit(true) does not throw exception</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test11 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0), repeat n times</listitem>
      <listitem>Check each status is StatusActive</listitem>
      <listitem>Check each commit(false) does not throw exception</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test12 
    <itemizedlist>
      <listitem>Creates a transaction via transactionFactory.create(0), repeat n times</listitem>
      <listitem>Check each status is StatusActive</listitem>
      <listitem>Check each rollback() does not throw exception</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test13 
    <itemizedlist>
      <listitem>Create n threads which does m times
      <itemizedlist>
        <listitem>Creates a transaction via transactionFactory.create(0)</listitem>
        <listitem>Check its status is StatusActive</listitem>
        <listitem>Checks commit(true), commit(false), rollback(), alternatively, does not throw an exception</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Test14 
    <itemizedlist>
      <listitem>Create n threads which does
      <itemizedlist>
        <listitem>Creates a transaction via transactionFactory.create(0) m times</listitem>
        <listitem>Check each status is StatusActive</listitem>
        <listitem>Checks each commit(true), commit(false), rollback(), alternatively, does not throw an exception</listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
</section>

<!-- start section -->
<section><title> AITResources</title>
<section><title>Overview</title>
  <itemizedlist>
  <listitem>
    AIT 
    <itemizedlist>
      <listitem>Advanced(/Arjuna) Integrated(/Interface) Transactions</listitem>
      <listitem>Transactional Objects for Java</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Series 
    <itemizedlist>
      <listitem>AITResources01: Implicit context propagation</listitem>
      <listitem>AITResources02: Explicit context propagation</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests 
    <itemizedlist>
      <listitem>Transaction Engine</listitem>
      <listitem>AIT support</listitem>
      <listitem>Context propagation</listitem>
      <listitem>Memory problems</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> AITResources 01 &amp; 02 Summary</title>
  <itemizedlist>
  <listitem>
    Building blocks: 
    <itemizedlist>
      <listitem>Interfaces: 2 (Counter &amp; PingPong)</listitem>
      <listitem>Implementations: 4 (3 Counter, 1 PingPong)</listitem>
      <listitem>Servers: 10</listitem>
      <listitem>Clients: 17</listitem>
      <listitem>Outcomes: 2</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Tests: 
    <itemizedlist>
      <listitem>Functional: 44</listitem>
      <listitem>Memory: 14</listitem>
      <listitem>Configurations: 58</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> AITResources Interfaces</title>
  <itemizedlist>
  <listitem>
    Counter 
    <itemizedlist>
      <listitem>get()</listitem>
      <listitem>set()</listitem>
      <listitem>increase()</listitem>
      <listitem>getMemory()</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    PingPong 
    <itemizedlist>
      <listitem>hit(count, ping, pong) 
      <itemizedlist>
        <listitem>If count != 0, call hit on ping, with count-1, and ping and pong swapped</listitem>
        <listitem>If count == 0, increase a value in object</listitem>
      </itemizedlist>
      </listitem>
      <listitem>bad_hit(count, bad_count, ping, pong) 
      <itemizedlist>
        <listitem>similar to hit(), except if bad_count == 0, abort transaction</listitem>
      </itemizedlist>
      </listitem>
      <listitem>get()</listitem>
      <listitem>getMemory()</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> AITResources Implementations</title>
  <itemizedlist>
  <listitem> AITCounterImpl01 - Operations create [nested] transactions (AtomicTransaction)</listitem>
  <listitem> AITCounterImpl02 - Operations create [nested] transactions (OTS.current)</listitem>
  <listitem> AITCounterImpl03 - Operations do not create transactions</listitem>
  <listitem> AITPingPongImpl01 - Operations create [nested] transactions (AtomicTransaction)</listitem>
  </itemizedlist>
</section>
<section><title> AITResources Server</title>
  <itemizedlist>
  <listitem> Server01: 1 x AITCounterImpl01</listitem>
  <listitem> Server02: 4 x AITCounterImpl01</listitem>
  <listitem> Server03: 1 x AITCounterImpl02</listitem>
  <listitem> Server04: 4 x AITCounterImpl02</listitem>
  <listitem> Server05: 1 x AITCounterImpl01, 1 x AITCounterImpl02</listitem>
  <listitem> Server06: 2 x AITCounterImpl01, 2 x AITCounterImpl02</listitem>
  <listitem> Server07: 1 x AITPingPongImpl01</listitem>
  <listitem> Server08: 2 x AITPingPongImpl01</listitem>
  <listitem> Server09: 1 x AITCounterImpl03</listitem>
  <listitem> Server10: 4 x AITCounterImpl03</listitem>
  </itemizedlist>
</section>
<section><title> AITResources Clients</title>
  <itemizedlist>
  <listitem>
    Client01 
    <itemizedlist>
      <listitem>Performs 1000 increase(), no client transaction</listitem>
      <listitem>Does get() to check counter value now 1000</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client02 
    <itemizedlist>
      <listitem>Performs 1000 increase(), each with own transaction</listitem>
      <listitem>Transactions are alternatively committed/rolled back</listitem>
      <listitem>Does get() to check counter value now 500</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client03 
    <itemizedlist>
      <listitem>Memory check version of Client01</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client04 
    <itemizedlist>
      <listitem>Memory check version of Client02</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client05 
    <itemizedlist>
      <listitem>Performs 10 hit(), with count 0,1,2 … 9, ping and pong same, no client transaction</listitem>
      <listitem>Does get() to check value now 10</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client06 
    <itemizedlist>
      <listitem>Performs 10 hit(), with count 0,1,2 … 9, ping and pong different, no client transaction</listitem>
      <listitem>Does get(), on both ping and pong, to check values are now 5</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client07 
    <itemizedlist>
      <listitem>Memory check version of Client05</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client08 
    <itemizedlist>
      <listitem>Memory check version of Client06</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client09 
    <itemizedlist>
      <listitem>Performs 1000 successful increase(), no client transaction</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client10 
    <itemizedlist>
      <listitem>Performs 10 bad_hit(), with count 0,1,2 … 9, for each bad_count 0 … count, ping and pong same, no client transaction</listitem>
      <listitem>Does get() to check value now 0</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client11 
    <itemizedlist>
      <listitem>Performs 10 bad_hit(), with count 0,1,2 … 9 , for each bad_count 0 … count, ping and pong different, no client transaction</listitem>
      <listitem>Does get(), on both ping and pong, to check values are now 0</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client12 
    <itemizedlist>
      <listitem>Memory check version of Client10</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client13 
    <itemizedlist>
      <listitem>Memory check version of Client11</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client14 
    <itemizedlist>
      <listitem>Creates n threads, which each performs m successful increase(), no client transaction</listitem>
      <listitem>Does get() to check counter value now n * m</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client15 
    <itemizedlist>
      <listitem>Memory check version of Client14</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client16 
    <itemizedlist>
      <listitem>Creates n threads, which each performs m successful increase(), each with own transaction, commits if increase() was successful, rolls bask if increase() was unsuccessful</listitem>
      <listitem>Does get() to check counter value now n * m</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    Client17 
    <itemizedlist>
      <listitem>Memory check version of Client16</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
<section><title> AITResources Outcomes</title>
  <itemizedlist>
  <listitem> Outcome01</listitem>
  <listitem> Checks if a counter has an "expected value"</listitem>
  <listitem> Outcome02</listitem>
  <listitem> Checks if two counters has an "expected value"</listitem>
  </itemizedlist>
</section>
<section><title> AITResources Memory Tests</title>
  <itemizedlist>
  <listitem>
    General form: 
    <itemizedlist>
      <listitem>Perform test pattern (reduced) 
      <itemizedlist>
        <listitem>Make sure all classes loaded</listitem>
        <listitem>Caches full</listitem>
      </itemizedlist>
      </listitem>
      <listitem>Get memory of all Clients and Servers 
      <itemizedlist>
        <listitem>Repeat: run GC, get memory until no further decreases</listitem>
      </itemizedlist>
      </listitem>
      <listitem>Perform test pattern </listitem>
      <listitem>Get memory of all Clients and Servers 
      <itemizedlist>
        <listitem>Repeat: run GC, get memory until no further decreases</listitem>
      </itemizedlist>
      </listitem>
      <listitem>Perform check </listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
</section>

<!-- start section -->
<section><title> CrashRecovery</title>

<section><title> CrashRecovery Summary</title>

  <itemizedlist>
  <listitem>
    CrashRecovery01 
    <itemizedlist>
      <listitem>Tests replay_completion (Implicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery02 (_1: One resource &amp; _2: Two resource) 
    <itemizedlist>
      <listitem>Tests behaviour server crash (Implicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery03 
    <itemizedlist>
      <listitem>Tests replay_completion called with null (Implicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery04 
    <itemizedlist>
      <listitem>Tests replay_completion (Explicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery05 (_1: One resource &amp; _2: Two resource) 
    <itemizedlist>
      <listitem>Tests behaviour server crash (Explicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery06 
    <itemizedlist>
      <listitem>Tests replay_completion called with null (Explicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery07 
    <itemizedlist>
      <listitem>Tests behaviour client crash (Implicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery08 
    <itemizedlist>
      <listitem>Tests behaviour client crash (Explicit context propagation)</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery09 
    <itemizedlist>
      <listitem>Tests automatic TO (AIT) resource initiated crash recovery (Implicit context propagation)</listitem>
      <listitem>Not supported by system, if passes caused by recovery manager initiated crash recovery ]</listitem>
    </itemizedlist>
  </listitem>
  <listitem>
    CrashRecovery10 
    <itemizedlist>
      <listitem>Tests automatic TO (AIT) resource initiated crash recovery (Explicit context propagation)</listitem>
      <listitem>Not supported by system, if passes caused by recovery manager initiated crash recovery ]</listitem>
    </itemizedlist>
  </listitem>
  </itemizedlist>
</section>
</section>
</appendix>
